[global_tags]

# influx delete --bucket hsharz  --start '1970-01-01T00:00:00Z' --stop '2024-01-01T00:00:00Z'

[agent]
  interval = "60s"
  round_interval = true
  metric_batch_size = 1000
  metric_buffer_limit = 10000
  collection_jitter = "0s"
  flush_interval = "10s"
  flush_jitter = "0s"
  precision = ""
  hostname = "192.xxx.0.xxx"
  omit_hostname = false

[[outputs.influxdb_v2]]	
  urls = ["http://influxdb:8086"]
  token = "$DOCKER_INFLUXDB_INIT_ADMIN_TOKEN"
  organization = "$DOCKER_INFLUXDB_INIT_ORG"
  bucket = "$DOCKER_INFLUXDB_INIT_BUCKET"


# [[inputs.docker]]
#   endpoint = "unix:///var/run/docker.sock"
#   gather_services = false
#   container_names = []
#   source_tag = false
#   container_name_include = []
#   container_name_exclude = []
#   timeout = "5s"
#   perdevice = true
#   total = false
#   docker_label_include = []
#   docker_label_exclude = []
# 
# [[inputs.cpu]]
#   percpu = true
#   totalcpu = true
#   collect_cpu_time = false
#   report_active = false
# 
# 
# [[inputs.disk]]
#   ignore_fs = ["tmpfs", "devtmpfs", "devfs", "iso9660", "overlay", "aufs", "squashfs"]
# 
# [[inputs.mem]]
# 
# [[inputs.processes]]



# Read metrics from MQTT topic(s)
[[inputs.mqtt_consumer]]
  ## Broker URLs for the MQTT server or cluster.  To connect to multiple
  ## clusters or standalone servers, use a separate plugin instance.
  ##   example: servers = ["tcp://localhost:1883"]
  ##            servers = ["ssl://localhost:1883"]
  ##            servers = ["ws://localhost:1883"]
  servers = ["tcp://mosquitto:1883"]

  ## Topics that will be subscribed to.
  topics = [
    "tclab/#",
  ]
  
  ## Data format to consume.
  ## Each data format has its own unique set of configuration options, read
  ## more about them here:
  ## https://github.com/influxdata/telegraf/blob/master/docs/DATA_FORMATS_INPUT.md
  data_format = "value"
  data_type = "float"

  ## Enable extracting tag values from MQTT topics
  ## _ denotes an ignored entry in the topic path

  # tclab/actor/R1
  # tclab/sensor/T1

  [[inputs.mqtt_consumer.topic_parsing]]
    topic = "+/+/+"
    measurement = "Device/_/_"
    tags = "Device/Source/SensorName"